

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import "../styles/resizeable.css";
import { ToggleContextProvider } from "@/contexts/toggleSide";
import { Provider } from "react-redux";
import {store}  from "@/redux/store" 
import ReduxProvider from "./ReduxProvider";




const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {

 


  return (
    <html lang="en" suppressHydrationWarning>
      <body

        className={`${geistSans.variable}
        ${geistMono.variable} antialiased`}

        suppressHydrationWarning={true}


      >

        <ReduxProvider >
          <ToggleContextProvider>
           
          
            {children}
        
          
          </ToggleContextProvider>

          </ReduxProvider>
        
      </body>
    </html>
  );
}
